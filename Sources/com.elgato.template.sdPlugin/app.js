parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"A2T1":[function(require,module,exports) {
function t(t){$SD.on("com.elgato.template.action.willAppear",t=>e.onWillAppear(t)),$SD.on("com.elgato.template.action.keyUp",t=>e.onKeyUp(t)),$SD.on("com.elgato.template.action.sendToPlugin",t=>e.onSendToPlugin(t)),$SD.on("com.elgato.template.action.didReceiveSettings",t=>e.onDidReceiveSettings(t)),$SD.on("com.elgato.template.action.propertyInspectorDidAppear",t=>{console.log("%c%s","color: white; background: black; font-size: 13px;","[app.js]propertyInspectorDidAppear:")}),$SD.on("com.elgato.template.action.propertyInspectorDidDisappear",t=>{console.log("%c%s","color: white; background: red; font-size: 13px;","[app.js]propertyInspectorDidDisappear:")})}$SD.on("connected",e=>t(e));const e={settings:{},onDidReceiveSettings:function(t){console.log("%c%s","color: white; background: red; font-size: 15px;","[app.js]onDidReceiveSettings:"),this.settings=Utils.getProp(t,"payload.settings",{}),this.doSomeThing(this.settings,"onDidReceiveSettings","orange"),this.setTitle(t)},onWillAppear:function(t){console.log("You can cache your settings in 'onWillAppear'",t.payload.settings),this.settings=t.payload.settings,this.settings&&0!==Object.keys(this.settings).length||(this.settings.mynameinput="TEMPLATE"),this.setTitle(t)},onKeyUp:function(t){this.doSomeThing(t,"onKeyUp","green")},onSendToPlugin:function(t){const e=Utils.getProp(t,"payload.sdpi_collection",{});e.value&&void 0!==e.value&&this.doSomeThing({[e.key]:e.value},"onSendToPlugin","fuchsia")},saveSettings:function(t,e){console.log("saveSettings:",t),e.hasOwnProperty("key")&&""!=e.key&&e.value&&void 0!==e.value&&(this.settings[e.key]=e.value,console.log("setSettings....",this.settings),$SD.api.setSettings(t.context,this.settings))},setTitle:function(t){this.settings&&this.settings.hasOwnProperty("mynameinput")&&(console.log("watch the key on your StreamDeck - it got a new title...",this.settings.mynameinput),$SD.api.setTitle(t.context,this.settings.mynameinput))},doSomeThing:function(t,e,o){console.log("%c%s",`color: white; background: ${o||"grey"}; font-size: 15px;`,`[app.js]doSomeThing from: ${e}`)}};
},{}]},{},["A2T1"], null)
//# sourceMappingURL=/app.js.map