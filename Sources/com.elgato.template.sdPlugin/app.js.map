{"version":3,"sources":["../node_modules/async-limiter/index.js","../node_modules/ws/lib/buffer-util.js","../node_modules/ws/lib/constants.js","../node_modules/ws/lib/permessage-deflate.js","../node_modules/ws/lib/event-target.js","../node_modules/ws/lib/extension.js","../node_modules/ws/lib/validation.js","../node_modules/ws/lib/receiver.js","../node_modules/ws/lib/sender.js","../node_modules/ws/lib/websocket.js","../node_modules/ws/lib/websocket-server.js","../node_modules/ws/index.js","../node_modules/inherits/inherits_browser.js","../node_modules/inherits/inherits.js","../node_modules/safe-buffer/index.js","../node_modules/sha.js/hash.js","../node_modules/sha.js/sha256.js","../node_modules/obs-websocket-js/lib/util/authenticationHashing.js","../node_modules/obs-websocket-js/lib/Status.js","../node_modules/debug/node_modules/ms/index.js","../node_modules/debug/src/common.js","../node_modules/debug/src/browser.js","../node_modules/has-flag/index.js","../node_modules/supports-color/index.js","../node_modules/debug/src/node.js","../node_modules/debug/src/index.js","../node_modules/obs-websocket-js/lib/util/logAmbiguousError.js","../node_modules/obs-websocket-js/lib/util/camelCaseKeys.js","../node_modules/obs-websocket-js/lib/Socket.js","../node_modules/obs-websocket-js/lib/OBSWebSocket.js","../node_modules/obs-websocket-js/lib/index.js","app.js"],"names":["module","exports","flag","argv","process","prefix","startsWith","length","pos","indexOf","terminatorPos","os","require","hasFlag","env","forceColor","translateLevel","level","hasBasic","has256","has16m","supportsColor","stream","isTTY","min","platform","osRelease","release","split","Number","versions","node","some","sign","CI_NAME","test","TEAMCITY_VERSION","COLORTERM","version","parseInt","TERM_PROGRAM_VERSION","TERM_PROGRAM","TERM","getSupportLevel","FORCE_COLOR","stdout","stderr","OBSWebSocket","obs","connected","jsn","$SD","on","jsonObj","action","onWillAppear","onKeyUp","onSendToPlugin","onDidReceiveSettings","console","log","connect","settings","Utils","getProp","doSomeThing","setTitle","payload","Object","keys","mynameinput","getSourcesList","sdpi_collection","value","undefined","key","saveSettings","hasOwnProperty","api","setSettings","context","inJsonData","caller","tagColor"],"mappings":"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","file":"app.js","sourceRoot":"../../src","sourcesContent":["'use strict';\n\nfunction Queue(options) {\n  if (!(this instanceof Queue)) {\n    return new Queue(options);\n  }\n\n  options = options || {};\n  this.concurrency = options.concurrency || Infinity;\n  this.pending = 0;\n  this.jobs = [];\n  this.cbs = [];\n  this._done = done.bind(this);\n}\n\nvar arrayAddMethods = [\n  'push',\n  'unshift',\n  'splice'\n];\n\narrayAddMethods.forEach(function(method) {\n  Queue.prototype[method] = function() {\n    var methodResult = Array.prototype[method].apply(this.jobs, arguments);\n    this._run();\n    return methodResult;\n  };\n});\n\nObject.defineProperty(Queue.prototype, 'length', {\n  get: function() {\n    return this.pending + this.jobs.length;\n  }\n});\n\nQueue.prototype._run = function() {\n  if (this.pending === this.concurrency) {\n    return;\n  }\n  if (this.jobs.length) {\n    var job = this.jobs.shift();\n    this.pending++;\n    job(this._done);\n    this._run();\n  }\n\n  if (this.pending === 0) {\n    while (this.cbs.length !== 0) {\n      var cb = this.cbs.pop();\n      process.nextTick(cb);\n    }\n  }\n};\n\nQueue.prototype.onDone = function(cb) {\n  if (typeof cb === 'function') {\n    this.cbs.push(cb);\n    this._run();\n  }\n};\n\nfunction done() {\n  this.pending--;\n  this._run();\n}\n\nmodule.exports = Queue;\n","'use strict';\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat (list, totalLength) {\n  const target = Buffer.allocUnsafe(totalLength);\n  var offset = 0;\n\n  for (var i = 0; i < list.length; i++) {\n    const buf = list[i];\n    buf.copy(target, offset);\n    offset += buf.length;\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask (source, mask, output, offset, length) {\n  for (var i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask (buffer, mask) {\n  // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n  const length = buffer.length;\n  for (var i = 0; i < length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\ntry {\n  const bufferUtil = require('bufferutil');\n  const bu = bufferUtil.BufferUtil || bufferUtil;\n\n  module.exports = {\n    mask (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bu.mask(source, mask, output, offset, length);\n    },\n    unmask (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bu.unmask(buffer, mask);\n    },\n    concat\n  };\n} catch (e) /* istanbul ignore next */ {\n  module.exports = { concat, mask: _mask, unmask: _unmask };\n}\n","'use strict';\n\nmodule.exports = {\n  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  EMPTY_BUFFER: Buffer.alloc(0),\n  NOOP: () => {}\n};\n","'use strict';\n\nconst Limiter = require('async-limiter');\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst constants = require('./constants');\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst EMPTY_BLOCK = Buffer.from([0x00]);\n\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kWriteInProgress = Symbol('write-in-progress');\nconst kPendingClose = Symbol('pending-close');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} options.serverNoContextTakeover Request/accept disabling\n   *     of server context takeover\n   * @param {Boolean} options.clientNoContextTakeover Advertise/acknowledge\n   *     disabling of client context takeover\n   * @param {(Boolean|Number)} options.serverMaxWindowBits Request/confirm the\n   *     use of a custom server window size\n   * @param {(Boolean|Number)} options.clientMaxWindowBits Advertise support\n   *     for, or request, a custom client window size\n   * @param {Object} options.zlibDeflateOptions Options to pass to zlib on deflate\n   * @param {Object} options.zlibInflateOptions Options to pass to zlib on inflate\n   * @param {Number} options.threshold Size (in bytes) below which messages\n   *     should not be compressed\n   * @param {Number} options.concurrencyLimit The number of concurrent calls to\n   *     zlib\n   * @param {Boolean} isServer Create the instance in either server or client\n   *     mode\n   * @param {Number} maxPayload The maximum allowed message length\n   */\n  constructor (options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold = this._options.threshold !== undefined\n      ? this._options.threshold\n      : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency = this._options.concurrencyLimit !== undefined\n        ? this._options.concurrencyLimit\n        : 10;\n      zlibLimiter = new Limiter({ concurrency });\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName () {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer () {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept (configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup () {\n    if (this._inflate) {\n      if (this._inflate[kWriteInProgress]) {\n        this._inflate[kPendingClose] = true;\n      } else {\n        this._inflate.close();\n        this._inflate = null;\n      }\n    }\n    if (this._deflate) {\n      if (this._deflate[kWriteInProgress]) {\n        this._deflate[kPendingClose] = true;\n      } else {\n        this._deflate.close();\n        this._deflate = null;\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer (offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient (response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams (configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        var value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress (data, fin, callback) {\n    zlibLimiter.push((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress (data, fin, callback) {\n    zlibLimiter.push((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress (data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits = typeof this.params[key] !== 'number'\n        ? zlib.Z_DEFAULT_WINDOWBITS\n        : this.params[key];\n\n      this._inflate = zlib.createInflateRaw(\n        Object.assign({}, this._options.zlibInflateOptions, { windowBits })\n      );\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n    this._inflate[kWriteInProgress] = true;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (\n        (fin && this.params[`${endpoint}_no_context_takeover`]) ||\n        this._inflate[kPendingClose]\n      ) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kWriteInProgress] = false;\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress (data, fin, callback) {\n    if (!data || data.length === 0) {\n      process.nextTick(callback, null, EMPTY_BLOCK);\n      return;\n    }\n\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits = typeof this.params[key] !== 'number'\n        ? zlib.Z_DEFAULT_WINDOWBITS\n        : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw(\n        Object.assign(\n          // TODO deprecate memLevel/level and recommend zlibDeflateOptions instead\n          {\n            memLevel: this._options.memLevel,\n            level: this._options.level\n          },\n          this._options.zlibDeflateOptions,\n          { windowBits }\n        )\n      );\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      //\n      // `zlib.DeflateRaw` emits an `'error'` event only when an attempt to use\n      // it is made after it has already been closed. This cannot happen here,\n      // so we only add a listener for the `'data'` event.\n      //\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kWriteInProgress] = true;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      var data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      if (\n        (fin && this.params[`${endpoint}_no_context_takeover`]) ||\n        this._deflate[kPendingClose]\n      ) {\n        this._deflate.close();\n        this._deflate = null;\n      } else {\n        this._deflate[kWriteInProgress] = false;\n        this._deflate[kTotalLength] = 0;\n        this._deflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData (chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData (chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError][constants.kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError (err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[constants.kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\n/**\n * Class representing an event.\n *\n * @private\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} target A reference to the target to which the event was dispatched\n   */\n  constructor (type, target) {\n    this.target = target;\n    this.type = type;\n  }\n}\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n * @private\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The received data\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor (data, target) {\n    super('message', target);\n\n    this.data = data;\n  }\n}\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n * @private\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {Number} code The status code explaining why the connection is being closed\n   * @param {String} reason A human-readable string explaining why the connection is closing\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor (code, reason, target) {\n    super('close', target);\n\n    this.wasClean = target._closeFrameReceived && target._closeFrameSent;\n    this.reason = reason;\n    this.code = code;\n  }\n}\n\n/**\n * Class representing an open event.\n *\n * @extends Event\n * @private\n */\nclass OpenEvent extends Event {\n  /**\n   * Create a new `OpenEvent`.\n   *\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor (target) {\n    super('open', target);\n  }\n}\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n * @private\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {Object} error The error that generated this event\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor (error, target) {\n    super('error', target);\n\n    this.message = error.message;\n    this.error = error;\n  }\n}\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} method A string representing the event type to listen for\n   * @param {Function} listener The listener to add\n   * @public\n   */\n  addEventListener (method, listener) {\n    if (typeof listener !== 'function') return;\n\n    function onMessage (data) {\n      listener.call(this, new MessageEvent(data, this));\n    }\n\n    function onClose (code, message) {\n      listener.call(this, new CloseEvent(code, message, this));\n    }\n\n    function onError (error) {\n      listener.call(this, new ErrorEvent(error, this));\n    }\n\n    function onOpen () {\n      listener.call(this, new OpenEvent(this));\n    }\n\n    if (method === 'message') {\n      onMessage._listener = listener;\n      this.on(method, onMessage);\n    } else if (method === 'close') {\n      onClose._listener = listener;\n      this.on(method, onClose);\n    } else if (method === 'error') {\n      onError._listener = listener;\n      this.on(method, onError);\n    } else if (method === 'open') {\n      onOpen._listener = listener;\n      this.on(method, onOpen);\n    } else {\n      this.on(method, listener);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} method A string representing the event type to remove\n   * @param {Function} listener The listener to remove\n   * @public\n   */\n  removeEventListener (method, listener) {\n    const listeners = this.listeners(method);\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i] === listener || listeners[i]._listener === listener) {\n        this.removeListener(method, listeners[i]);\n      }\n    }\n  }\n};\n\nmodule.exports = EventTarget;\n","'use strict';\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push (dest, name, elem) {\n  if (Object.prototype.hasOwnProperty.call(dest, name)) dest[name].push(elem);\n  else dest[name] = [elem];\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse (header) {\n  const offers = {};\n\n  if (header === undefined || header === '') return offers;\n\n  var params = {};\n  var mustUnescape = false;\n  var isEscaping = false;\n  var inQuotes = false;\n  var extensionName;\n  var paramName;\n  var start = -1;\n  var end = -1;\n\n  for (var i = 0; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20/* ' ' */|| code === 0x09/* '\\t' */) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b/* ';' */ || code === 0x2c/* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = {};\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = {};\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d/* '=' */&& start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22/* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c/* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        var value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = {};\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, {});\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format (extensions) {\n  return Object.keys(extensions).map((extension) => {\n    var configurations = extensions[extension];\n    if (!Array.isArray(configurations)) configurations = [configurations];\n    return configurations.map((params) => {\n      return [extension].concat(Object.keys(params).map((k) => {\n        var values = params[k];\n        if (!Array.isArray(values)) values = [values];\n        return values.map((v) => v === true ? k : `${k}=${v}`).join('; ');\n      })).join('; ');\n    }).join(', ');\n  }).join(', ');\n}\n\nmodule.exports = { format, parse };\n","'use strict';\n\ntry {\n  const isValidUTF8 = require('utf-8-validate');\n\n  exports.isValidUTF8 = typeof isValidUTF8 === 'object'\n    ? isValidUTF8.Validation.isValidUTF8 // utf-8-validate@<3.0.0\n    : isValidUTF8;\n} catch (e) /* istanbul ignore next */ {\n  exports.isValidUTF8 = () => true;\n}\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nexports.isValidStatusCode = (code) => {\n  return (\n    (code >= 1000 &&\n      code <= 1013 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n};\n","'use strict';\n\nconst stream = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst bufferUtil = require('./buffer-util');\nconst validation = require('./validation');\nconst constants = require('./constants');\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends stream.Writable\n */\nclass Receiver extends stream.Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {String} binaryType The type for binary data\n   * @param {Object} extensions An object containing the negotiated extensions\n   * @param {Number} maxPayload The maximum allowed message length\n   */\n  constructor (binaryType, extensions, maxPayload) {\n    super();\n\n    this._binaryType = binaryType || constants.BINARY_TYPES[0];\n    this[constants.kWebSocket] = undefined;\n    this._extensions = extensions || {};\n    this._maxPayload = maxPayload | 0;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   */\n  _write (chunk, encoding, cb) {\n    if (this._opcode === 0x08) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume (n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = buf.slice(n);\n      return buf.slice(0, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n\n      if (n >= buf.length) {\n        this._buffers.shift().copy(dst, dst.length - n);\n      } else {\n        buf.copy(dst, dst.length - n, 0, n);\n        this._buffers[0] = buf.slice(n);\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop (cb) {\n    var err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default: // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo () {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(RangeError, 'RSV2 and RSV3 must be clear', true, 1002);\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(RangeError, 'RSV1 must be clear', true, 1002);\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(RangeError, 'RSV1 must be clear', true, 1002);\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(RangeError, 'invalid opcode 0', true, 1002);\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(RangeError, 'FIN must be set', true, 1002);\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(RangeError, 'RSV1 must be clear', true, 1002);\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16 () {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64 () {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength () {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(RangeError, 'Max payload size exceeded', false, 1009);\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask () {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData (cb) {\n    var data = constants.EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n      if (this._masked) bufferUtil.unmask(data, this._mask);\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its lenght is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress (data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(error(RangeError, 'Max payload size exceeded', false, 1009));\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage () {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        var data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = toBuffer(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(toBuffer(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data);\n      } else {\n        const buf = toBuffer(fragments, messageLength);\n\n        if (!validation.isValidUTF8(buf)) {\n          this._loop = false;\n          return error(Error, 'invalid UTF-8 sequence', true, 1007);\n        }\n\n        this.emit('message', buf.toString());\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage (data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, '');\n        this.end();\n      } else if (data.length === 1) {\n        return error(RangeError, 'invalid payload length 1', true, 1002);\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!validation.isValidStatusCode(code)) {\n          return error(RangeError, `invalid status code ${code}`, true, 1002);\n        }\n\n        const buf = data.slice(2);\n\n        if (!validation.isValidUTF8(buf)) {\n          return error(Error, 'invalid UTF-8 sequence', true, 1007);\n        }\n\n        this.emit('conclude', code, buf.toString());\n        this.end();\n      }\n\n      return;\n    }\n\n    if (this._opcode === 0x09) this.emit('ping', data);\n    else this.emit('pong', data);\n\n    this._state = GET_INFO;\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {(Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error (ErrorCtor, message, prefix, statusCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err[constants.kStatusCode] = statusCode;\n  return err;\n}\n\n/**\n * Makes a buffer from a list of fragments.\n *\n * @param {Buffer[]} fragments The list of fragments composing the message\n * @param {Number} messageLength The length of the message\n * @return {Buffer}\n * @private\n */\nfunction toBuffer (fragments, messageLength) {\n  if (fragments.length === 1) return fragments[0];\n  if (fragments.length > 1) return bufferUtil.concat(fragments, messageLength);\n  return constants.EMPTY_BUFFER;\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n */\nfunction toArrayBuffer (buf) {\n  if (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n","'use strict';\n\nconst crypto = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst bufferUtil = require('./buffer-util');\nconst validation = require('./validation');\nconst constants = require('./constants');\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {net.Socket} socket The connection socket\n   * @param {Object} extensions An object containing the negotiated extensions\n   */\n  constructor (socket, extensions) {\n    this._extensions = extensions || {};\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {Buffer} data The data to frame\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @return {Buffer[]} The framed data as a list of `Buffer` instances\n   * @public\n   */\n  static frame (data, options) {\n    const merge = data.length < 1024 || (options.mask && options.readOnly);\n    var offset = options.mask ? 6 : 2;\n    var payloadLength = data.length;\n\n    if (data.length >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (data.length > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(data.length, 2);\n    } else if (payloadLength === 127) {\n      target.writeUInt32BE(0, 2);\n      target.writeUInt32BE(data.length, 6);\n    }\n\n    if (!options.mask) {\n      target[1] = payloadLength;\n      if (merge) {\n        data.copy(target, offset);\n        return [target];\n      }\n\n      return [target, data];\n    }\n\n    const mask = crypto.randomBytes(4);\n\n    target[1] = payloadLength | 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (merge) {\n      bufferUtil.mask(data, mask, target, offset, data.length);\n      return [target];\n    }\n\n    bufferUtil.mask(data, mask, data, 0, data.length);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {(Number|undefined)} code The status code component of the body\n   * @param {String} data The message component of the body\n   * @param {Boolean} mask Specifies whether or not to mask the message\n   * @param {Function} cb Callback\n   * @public\n   */\n  close (code, data, mask, cb) {\n    var buf;\n\n    if (code === undefined) {\n      buf = constants.EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !validation.isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || data === '') {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      buf = Buffer.allocUnsafe(2 + Buffer.byteLength(data));\n      buf.writeUInt16BE(code, 0);\n      buf.write(data, 2);\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doClose, buf, mask, cb]);\n    } else {\n      this.doClose(buf, mask, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a close message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @private\n   */\n  doClose (data, mask, cb) {\n    this.sendFrame(Sender.frame(data, {\n      fin: true,\n      rsv1: false,\n      opcode: 0x08,\n      mask,\n      readOnly: false\n    }), cb);\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  ping (data, mask, cb) {\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPing, data, mask, readOnly, cb]);\n    } else {\n      this.doPing(data, mask, readOnly, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a ping message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @param {Function} cb Callback\n   * @private\n   */\n  doPing (data, mask, readOnly, cb) {\n    this.sendFrame(Sender.frame(data, {\n      fin: true,\n      rsv1: false,\n      opcode: 0x09,\n      mask,\n      readOnly\n    }), cb);\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  pong (data, mask, cb) {\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPong, data, mask, readOnly, cb]);\n    } else {\n      this.doPong(data, mask, readOnly, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a pong message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @param {Function} cb Callback\n   * @private\n   */\n  doPong (data, mask, readOnly, cb) {\n    this.sendFrame(Sender.frame(data, {\n      fin: true,\n      rsv1: false,\n      opcode: 0x0a,\n      mask,\n      readOnly\n    }), cb);\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  send (data, options, cb) {\n    var opcode = options.binary ? 2 : 1;\n    var rsv1 = options.compress;\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (rsv1 && perMessageDeflate) {\n        rsv1 = data.length >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        fin: options.fin,\n        rsv1,\n        opcode,\n        mask: options.mask,\n        readOnly\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n      } else {\n        this.dispatch(data, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(Sender.frame(data, {\n        fin: options.fin,\n        rsv1: false,\n        opcode,\n        mask: options.mask,\n        readOnly\n      }), cb);\n    }\n  }\n\n  /**\n   * Dispatches a data message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} compress Specifies whether or not to compress `data`\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @param {Function} cb Callback\n   * @private\n   */\n  dispatch (data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this._deflating = false;\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue () {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[1].length;\n      params[0].apply(this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue (params) {\n    this._bufferedBytes += params[1].length;\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} cb Callback\n   * @private\n   */\n  sendFrame (list, cb) {\n    if (list.length === 2) {\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Converts an `ArrayBuffer` view into a buffer.\n *\n * @param {(DataView|TypedArray)} view The view to convert\n * @return {Buffer} Converted view\n * @private\n */\nfunction viewToBuffer (view) {\n  const buf = Buffer.from(view.buffer);\n\n  if (view.byteLength !== view.buffer.byteLength) {\n    return buf.slice(view.byteOffset, view.byteOffset + view.byteLength);\n  }\n\n  return buf;\n}\n","'use strict';\n\nconst EventEmitter = require('events');\nconst crypto = require('crypto');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst url = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst EventTarget = require('./event-target');\nconst extension = require('./extension');\nconst constants = require('./constants');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\n\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst kWebSocket = constants.kWebSocket;\nconst protocolVersions = [8, 13];\nconst closeTimeout = 30 * 1000; // Allow 30 seconds to terminate the connection cleanly.\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|url.Url|url.URL)} address The URL to which to connect\n   * @param {(String|String[])} protocols The subprotocols\n   * @param {Object} options Connection options\n   */\n  constructor (address, protocols, options) {\n    super();\n\n    this.readyState = WebSocket.CONNECTING;\n    this.protocol = '';\n\n    this._binaryType = constants.BINARY_TYPES[0];\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = '';\n    this._closeTimer = null;\n    this._closeCode = 1006;\n    this._extensions = {};\n    this._isServer = true;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      if (Array.isArray(protocols)) {\n        protocols = protocols.join(', ');\n      } else if (typeof protocols === 'object' && protocols !== null) {\n        options = protocols;\n        protocols = undefined;\n      }\n\n      initAsClient.call(this, address, protocols, options);\n    }\n  }\n\n  get CONNECTING () { return WebSocket.CONNECTING; }\n  get CLOSING () { return WebSocket.CLOSING; }\n  get CLOSED () { return WebSocket.CLOSED; }\n  get OPEN () { return WebSocket.OPEN; }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the required\n   * default \"blob\" type (instead we define a custom \"nodebuffer\" type).\n   *\n   * @type {String}\n   */\n  get binaryType () {\n    return this._binaryType;\n  }\n\n  set binaryType (type) {\n    if (constants.BINARY_TYPES.indexOf(type) < 0) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount () {\n    if (!this._socket) return 0;\n\n    //\n    // `socket.bufferSize` is `undefined` if the socket is closed.\n    //\n    return (this._socket.bufferSize || 0) + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions () {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Number} maxPayload The maximum allowed message size\n   * @private\n   */\n  setSocket (socket, head, maxPayload) {\n    const receiver = new Receiver(\n      this._binaryType,\n      this._extensions,\n      maxPayload\n    );\n\n    this._sender = new Sender(socket, this._extensions);\n    this._receiver = receiver;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this.readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose () {\n    this.readyState = WebSocket.CLOSED;\n\n    if (!this._socket) {\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} code Status code explaining why the connection is closing\n   * @param {String} data A string explaining why the connection is closing\n   * @public\n   */\n  close (code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (this._closeFrameSent && this._closeFrameReceived) this._socket.end();\n      return;\n    }\n\n    this.readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (this._socket.writable) {\n        if (this._closeFrameReceived) this._socket.end();\n\n        //\n        // Ensure that the connection is closed even if the closing handshake\n        // fails.\n        //\n        this._closeTimer = setTimeout(\n          this._socket.destroy.bind(this._socket),\n          closeTimeout\n        );\n      }\n    });\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} data The data to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when the ping is sent\n   * @public\n   */\n  ping (data, mask, cb) {\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (this.readyState !== WebSocket.OPEN) {\n      const err = new Error(\n        `WebSocket is not open: readyState ${this.readyState} ` +\n          `(${readyStates[this.readyState]})`\n      );\n\n      if (cb) return cb(err);\n      throw err;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || constants.EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} data The data to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when the pong is sent\n   * @public\n   */\n  pong (data, mask, cb) {\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (this.readyState !== WebSocket.OPEN) {\n      const err = new Error(\n        `WebSocket is not open: readyState ${this.readyState} ` +\n          `(${readyStates[this.readyState]})`\n      );\n\n      if (cb) return cb(err);\n      throw err;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || constants.EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when data is written out\n   * @public\n   */\n  send (data, options, cb) {\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (this.readyState !== WebSocket.OPEN) {\n      const err = new Error(\n        `WebSocket is not open: readyState ${this.readyState} ` +\n          `(${readyStates[this.readyState]})`\n      );\n\n      if (cb) return cb(err);\n      throw err;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    const opts = Object.assign({\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true\n    }, options);\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || constants.EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate () {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this._socket) {\n      this.readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\nreadyStates.forEach((readyState, i) => {\n  WebSocket[readyStates[i]] = i;\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    /**\n     * Return the listener of the event.\n     *\n     * @return {(Function|undefined)} The event listener or `undefined`\n     * @public\n     */\n    get () {\n      const listeners = this.listeners(method);\n      for (var i = 0; i < listeners.length; i++) {\n        if (listeners[i]._listener) return listeners[i]._listener;\n      }\n    },\n    /**\n     * Add a listener for the event.\n     *\n     * @param {Function} listener The listener to add\n     * @public\n     */\n    set (listener) {\n      const listeners = this.listeners(method);\n      for (var i = 0; i < listeners.length; i++) {\n        //\n        // Remove only the listeners added via `addEventListener`.\n        //\n        if (listeners[i]._listener) this.removeListener(method, listeners[i]);\n      }\n      this.addEventListener(method, listener);\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = EventTarget.addEventListener;\nWebSocket.prototype.removeEventListener = EventTarget.removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {(String|url.Url|url.URL)} address The URL to which to connect\n * @param {String} protocols The subprotocols\n * @param {Object} options Connection options\n * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable permessage-deflate\n * @param {Number} options.handshakeTimeout Timeout in milliseconds for the handshake request\n * @param {Number} options.protocolVersion Value of the `Sec-WebSocket-Version` header\n * @param {String} options.origin Value of the `Origin` or `Sec-WebSocket-Origin` header\n * @private\n */\nfunction initAsClient (address, protocols, options) {\n  options = Object.assign({\n    protocolVersion: protocolVersions[1],\n    perMessageDeflate: true\n  }, options, {\n    createConnection: undefined,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: undefined,\n    auth: undefined,\n    host: undefined,\n    path: undefined,\n    port: undefined\n  });\n\n  if (protocolVersions.indexOf(options.protocolVersion) === -1) {\n    throw new RangeError(\n      `Unsupported protocol version: ${options.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  this._isServer = false;\n\n  var parsedUrl;\n\n  if (typeof address === 'object' && address.href !== undefined) {\n    parsedUrl = address;\n    this.url = address.href;\n  } else {\n    parsedUrl = url.parse(address);\n    this.url = address;\n  }\n\n  const isUnixSocket = parsedUrl.protocol === 'ws+unix:';\n\n  if (!parsedUrl.host && (!isUnixSocket || !parsedUrl.pathname)) {\n    throw new Error(`Invalid URL: ${this.url}`);\n  }\n\n  const isSecure = parsedUrl.protocol === 'wss:' || parsedUrl.protocol === 'https:';\n  const key = crypto.randomBytes(16).toString('base64');\n  const httpObj = isSecure ? https : http;\n  const path = parsedUrl.search\n    ? `${parsedUrl.pathname || '/'}${parsedUrl.search}`\n    : parsedUrl.pathname || '/';\n  var perMessageDeflate;\n\n  options.createConnection = isSecure ? tlsConnect : netConnect;\n  options.port = parsedUrl.port || (isSecure ? 443 : 80);\n  options.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  options.headers = Object.assign({\n    'Sec-WebSocket-Version': options.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    'Connection': 'Upgrade',\n    'Upgrade': 'websocket'\n  }, options.headers);\n  options.path = path;\n\n  if (options.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      options.perMessageDeflate !== true ? options.perMessageDeflate : {},\n      false\n    );\n    options.headers['Sec-WebSocket-Extensions'] = extension.format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols) {\n    options.headers['Sec-WebSocket-Protocol'] = protocols;\n  }\n  if (options.origin) {\n    if (options.protocolVersion < 13) {\n      options.headers['Sec-WebSocket-Origin'] = options.origin;\n    } else {\n      options.headers.Origin = options.origin;\n    }\n  }\n  if (parsedUrl.auth) {\n    options.auth = parsedUrl.auth;\n  } else if (parsedUrl.username || parsedUrl.password) {\n    options.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isUnixSocket) {\n    const parts = path.split(':');\n\n    if (options.agent == null && process.versions.modules < 57) {\n      //\n      // Setting `socketPath` in conjunction with `createConnection` without an\n      // agent throws an error on Node.js < 8. Work around the issue by using a\n      // different property.\n      //\n      options._socketPath = parts[0];\n    } else {\n      options.socketPath = parts[0];\n    }\n\n    options.path = parts[1];\n  }\n\n  var req = this._req = httpObj.get(options);\n\n  if (options.handshakeTimeout) {\n    req.setTimeout(\n      options.handshakeTimeout,\n      () => abortHandshake(this, req, 'Opening handshake has timed out')\n    );\n  }\n\n  req.on('error', (err) => {\n    if (this._req.aborted) return;\n\n    req = this._req = null;\n    this.readyState = WebSocket.CLOSING;\n    this.emit('error', err);\n    this.emitClose();\n  });\n\n  req.on('response', (res) => {\n    if (this.emit('unexpected-response', req, res)) return;\n\n    abortHandshake(this, req, `Unexpected server response: ${res.statusCode}`);\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    this.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the `upgrade`\n    // event.\n    //\n    if (this.readyState !== WebSocket.CONNECTING) return;\n\n    req = this._req = null;\n\n    const digest = crypto.createHash('sha1')\n      .update(key + constants.GUID, 'binary')\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(this, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    const protList = (protocols || '').split(/, */);\n    var protError;\n\n    if (!protocols && serverProt) {\n      protError = 'Server sent a subprotocol but none was requested';\n    } else if (protocols && !serverProt) {\n      protError = 'Server sent no subprotocol';\n    } else if (serverProt && protList.indexOf(serverProt) === -1) {\n      protError = 'Server sent an invalid subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(this, socket, protError);\n      return;\n    }\n\n    if (serverProt) this.protocol = serverProt;\n\n    if (perMessageDeflate) {\n      try {\n        const extensions = extension.parse(\n          res.headers['sec-websocket-extensions']\n        );\n\n        if (extensions[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(\n            extensions[PerMessageDeflate.extensionName]\n          );\n          this._extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        abortHandshake(this, socket, 'Invalid Sec-WebSocket-Extensions header');\n        return;\n      }\n    }\n\n    this.setSocket(socket, head, 0);\n  });\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect (options) {\n  options.path = options.socketPath || options._socketPath || undefined;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect (options) {\n  options.path = options.socketPath || options._socketPath || undefined;\n  options.servername = options.servername || options.host;\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket)} stream The request to abort or the\n *     socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake (websocket, stream, message) {\n  websocket.readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream.abort();\n    stream.once('abort', websocket.emitClose.bind(websocket));\n    websocket.emit('error', err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {String} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude (code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._socket.removeListener('data', socketOnData);\n  websocket._socket.resume();\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain () {\n  this[kWebSocket]._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError (err) {\n  const websocket = this[kWebSocket];\n\n  websocket._socket.removeListener('data', socketOnData);\n\n  websocket.readyState = WebSocket.CLOSING;\n  websocket._closeCode = err[constants.kStatusCode];\n  websocket.emit('error', err);\n  websocket._socket.destroy();\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish () {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The message\n * @private\n */\nfunction receiverOnMessage (data) {\n  this[kWebSocket].emit('message', data);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing (data) {\n  const websocket = this[kWebSocket];\n\n  websocket.pong(data, !websocket._isServer, constants.NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong (data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */\nfunction socketOnClose () {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('end', socketOnEnd);\n\n  websocket.readyState = WebSocket.CLOSING;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk and emitted synchronously in a single\n  // `'data'` event.\n  //\n  websocket._socket.read();\n  websocket._receiver.end();\n\n  this.removeListener('data', socketOnData);\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData (chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd () {\n  const websocket = this[kWebSocket];\n\n  websocket.readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */\nfunction socketOnError () {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', constants.NOOP);\n\n  if (websocket) {\n    websocket.readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","'use strict';\n\nconst EventEmitter = require('events');\nconst crypto = require('crypto');\nconst http = require('http');\nconst url = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst extension = require('./extension');\nconst constants = require('./constants');\nconst WebSocket = require('./websocket');\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {String} options.host The hostname where to bind the server\n   * @param {Number} options.port The port where to bind the server\n   * @param {http.Server} options.server A pre-created HTTP/S server to use\n   * @param {Function} options.verifyClient An hook to reject connections\n   * @param {Function} options.handleProtocols An hook to handle protocols\n   * @param {String} options.path Accept only connections matching this path\n   * @param {Boolean} options.noServer Enable no server mode\n   * @param {Boolean} options.clientTracking Specifies whether or not to track clients\n   * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable permessage-deflate\n   * @param {Number} options.maxPayload The maximum allowed message size\n   * @param {Function} callback A listener for the `listening` event\n   */\n  constructor (options, callback) {\n    super();\n\n    options = Object.assign({\n      maxPayload: 100 * 1024 * 1024,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null\n    }, options);\n\n    if (options.port == null && !options.server && !options.noServer) {\n      throw new TypeError(\n        'One of the \"port\", \"server\", or \"noServer\" options must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(options.port, options.host, options.backlog, callback);\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, (ws) => {\n            this.emit('connection', ws, req);\n          });\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) this.clients = new Set();\n    this.options = options;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address () {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Close the server.\n   *\n   * @param {Function} cb Callback\n   * @public\n   */\n  close (cb) {\n    //\n    // Terminate all associated clients.\n    //\n    if (this.clients) {\n      for (const client of this.clients) client.terminate();\n    }\n\n    const server = this._server;\n\n    if (server) {\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // Close the http server if it was internally created.\n      //\n      if (this.options.port != null) return server.close(cb);\n    }\n\n    if (cb) cb();\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle (req) {\n    if (this.options.path && url.parse(req.url).pathname !== this.options.path) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade (req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const version = +req.headers['sec-websocket-version'];\n    const extensions = {};\n\n    if (\n      req.method !== 'GET' || req.headers.upgrade.toLowerCase() !== 'websocket' ||\n      !req.headers['sec-websocket-key'] || (version !== 8 && version !== 13) ||\n      !this.shouldHandle(req)\n    ) {\n      return abortHandshake(socket, 400);\n    }\n\n    if (this.options.perMessageDeflate) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(\n          req.headers['sec-websocket-extensions']\n        );\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        return abortHandshake(socket, 400);\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin: req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.connection.authorized || req.connection.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(extensions, req, socket, head, cb);\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {http.IncomingMessage} req The request object\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @private\n   */\n  completeUpgrade (extensions, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    const key = crypto.createHash('sha1')\n      .update(req.headers['sec-websocket-key'] + constants.GUID, 'binary')\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${key}`\n    ];\n\n    const ws = new WebSocket(null);\n    var protocol = req.headers['sec-websocket-protocol'];\n\n    if (protocol) {\n      protocol = protocol.trim().split(/ *, */);\n\n      //\n      // Optionally call external protocol selection handler.\n      //\n      if (this.options.handleProtocols) {\n        protocol = this.options.handleProtocols(protocol, req);\n      } else {\n        protocol = protocol[0];\n      }\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws.protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, this.options.maxPayload);\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => this.clients.delete(ws));\n    }\n\n    cb(ws);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when called\n * @private\n */\nfunction addListeners (server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners () {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Handle premature socket errors.\n *\n * @private\n */\nfunction socketOnError () {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {net.Socket} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake (socket, code, message, headers) {\n  if (socket.writable) {\n    message = message || http.STATUS_CODES[code];\n    headers = Object.assign({\n      'Connection': 'close',\n      'Content-type': 'text/html',\n      'Content-Length': Buffer.byteLength(message)\n    }, headers);\n\n    socket.write(\n      `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers).map(h => `${h}: ${headers[h]}`).join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n    );\n  }\n\n  socket.removeListener('error', socketOnError);\n  socket.destroy();\n}\n","'use strict';\n\nconst WebSocket = require('./lib/websocket');\n\nWebSocket.Server = require('./lib/websocket-server');\nWebSocket.Receiver = require('./lib/receiver');\nWebSocket.Sender = require('./lib/sender');\n\nmodule.exports = WebSocket;\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","try {\n  var util = require('util');\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  module.exports = require('./inherits_browser.js');\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","const SHA256 = require('sha.js/sha256');\n\n/**\n * SHA256 Hashing.\n *\n * @param  {String} [salt=''] salt.\n * @param  {String} [challenge=''] challenge.\n * @param  {String} msg Message to encode.\n * @return {String} sha256 encoded string.\n */\nmodule.exports = function (salt = '', challenge = '', msg) {\n  const hash = new SHA256()\n    .update(msg)\n    .update(salt)\n    .digest('base64');\n\n  const resp = new SHA256()\n    .update(hash)\n    .update(challenge)\n    .digest('base64');\n\n  return resp;\n};\n","module.exports = {\n  NOT_CONNECTED: {\n    status: 'error',\n    description: 'There is no Socket connection available.'\n  },\n  CONNECTION_ERROR: {\n    status: 'error',\n    description: 'Connection error.'\n  },\n  SOCKET_EXCEPTION: {\n    status: 'error',\n    description: 'An exception occurred from the underlying WebSocket.'\n  },\n  AUTH_NOT_REQUIRED: {\n    status: 'ok',\n    description: 'Authentication is not required.'\n  },\n  REQUEST_TYPE_NOT_SPECIFIED: {\n    status: 'error',\n    description: 'A Request Type was not specified.'\n  },\n\n  init() {\n    for (const key in this) {\n      if ({}.hasOwnProperty.call(this, key)) {\n        // Assign a value to 'code' identified by the status' key.\n        this[key].code = key;\n\n        // Assign a value to 'error' if one is not already defined.\n        if (this[key].status === 'error' && !this[key].error) {\n          this[key].error = this[key].description;\n        }\n      }\n    }\n\n    delete this.init;\n    return this;\n  }\n}.init();\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\-?\\d?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\t\t// Debug.formatArgs = formatArgs;\n\t\t// debug.rawLog = rawLog;\n\n\t\t// env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\nfunction log(...args) {\n\t// This hackery is required for IE8/9, where\n\t// the `console.log` function doesn't have 'apply'\n\treturn typeof console === 'object' &&\n\t\tconsole.log &&\n\t\tconsole.log(...args);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","'use strict';\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n","'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.replace(/\\s*\\n\\s*/g, ' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","/**\n * Disambiguates an \"error\" and formats it nicely for `debug` output.\n * Particularly useful when dealing with error response objects from obs-websocket,\n * which are not actual Error-type errors, but simply Objects.\n *\n * @param {Object} debug A `debug` instance.\n * @param {String} prefix A string to print in front of the formatted error.\n * @param {Object|Error} error An error of ambiguous type that you wish to log to `debug`. Can be an Error, Object, or String.\n */\nmodule.exports = function (debug, prefix, error) {\n  if (error && error.stack) {\n    debug(`${prefix}\\n %O`, error.stack);\n  } else if (typeof error === 'object') {\n    debug(`${prefix} %o`, error);\n  } else {\n    debug(`${prefix} %s`, error);\n  }\n};\n","/**\n * Converts kebab-case to camelCase.\n * Retains the original kebab-case entries.\n *\n * @param {Object} [obj={}] Keyed object.\n * @return {Object} Keyed object with added camelCased keys.\n */\nmodule.exports = function (obj) {\n  obj = obj || {};\n  for (const key in obj) {\n    if (!{}.hasOwnProperty.call(obj, key)) {\n      continue;\n    }\n\n    const camelCasedKey = key.replace(/-([a-z])/gi, ($0, $1) => {\n      return $1.toUpperCase();\n    });\n    obj[camelCasedKey] = obj[key];\n  }\n\n  return obj;\n};\n","const WebSocket = require('ws');\nconst EventEmitter = require('events');\nconst hash = require('./util/authenticationHashing');\nconst Status = require('./Status');\nconst debug = require('debug')('obs-websocket-js:Socket');\nconst logAmbiguousError = require('./util/logAmbiguousError');\nconst camelCaseKeys = require('./util/camelCaseKeys');\n\nclass Socket extends EventEmitter {\n  constructor() {\n    super();\n    this._connected = false;\n    this._socket = undefined;\n\n    const originalEmit = this.emit;\n    this.emit = function (...args) {\n      debug('[emit] %s err: %o data: %o', ...args);\n      originalEmit.apply(this, args);\n    };\n  }\n\n  async connect(args = {}) {\n    args = args || {};\n    const address = args.address || 'localhost:4444';\n\n    if (this._connected) {\n      this._socket.close();\n    }\n\n    // eslint-disable-next-line no-async-promise-executor\n    return new Promise(async (resolve, reject) => {\n      try {\n        await this._connect(address);\n        await this._authenticate(args.password);\n        resolve();\n      } catch (err) {\n        this._socket.close();\n        this._connected = false;\n        logAmbiguousError(debug, 'Connection failed:', err);\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Opens a WebSocket connection to an obs-websocket server, but does not attempt any authentication.\n   *\n   * @param {String} address url without ws:// prefix.\n   * @returns {Promise}\n   * @private\n   * @return {Promise} on attempted creation of WebSocket connection.\n   */\n  async _connect(address) {\n    return new Promise((resolve, reject) => {\n      let settled = false;\n\n      debug('Attempting to connect to: %s', address);\n      this._socket = new WebSocket('ws://' + address);\n\n      // We only handle the initial connection error.\n      // Beyond that, the consumer is responsible for adding their own generic `error` event listener.\n      // FIXME: Unsure how best to expose additional information about the WebSocket error.\n      this._socket.onerror = err => {\n        if (settled) {\n          logAmbiguousError(debug, 'Unknown Socket Error', err);\n          this.emit('error', err);\n          return;\n        }\n\n        settled = true;\n        logAmbiguousError(debug, 'Websocket Connection failed:', err);\n        reject(Status.CONNECTION_ERROR);\n      };\n\n      this._socket.onopen = () => {\n        if (settled) {\n          return;\n        }\n\n        this._connected = true;\n        settled = true;\n\n        debug('Connection opened: %s', address);\n        this.emit('ConnectionOpened');\n        resolve();\n      };\n\n      // Looks like this should be bound. We don't technically cancel the connection when the authentication fails.\n      this._socket.onclose = () => {\n        this._connected = false;\n        debug('Connection closed: %s', address);\n        this.emit('ConnectionClosed');\n      };\n\n      // This handler must be present before we can call _authenticate.\n      this._socket.onmessage = msg => {\n        // eslint-disable-next-line capitalized-comments\n        debug('[OnMessage]: %o', msg);\n        const message = camelCaseKeys(JSON.parse(msg.data));\n        let err;\n        let data;\n\n        if (message.status === 'error') {\n          err = message;\n        } else {\n          data = message;\n        }\n\n        // Emit the message with ID if available, otherwise try to find a non-messageId driven event.\n        if (message.messageId) {\n          this.emit(`obs:internal:message:id-${message.messageId}`, err, data);\n        } else if (message.updateType) {\n          this.emit(message.updateType, data);\n        } else {\n          logAmbiguousError(debug, 'Unrecognized Socket Message:', message);\n          this.emit('message', message);\n        }\n      };\n    });\n  }\n\n  /**\n   * Authenticates to an obs-websocket server. Must already have an active connection before calling this method.\n   *\n   * @param {String} [password=''] authentication string.\n   * @private\n   * @return {Promise} on resolution of authentication call.\n   */\n  async _authenticate(password = '') {\n    if (!this._connected) {\n      throw Status.NOT_CONNECTED;\n    }\n\n    const auth = await this.send('GetAuthRequired');\n\n    if (!auth.authRequired) {\n      debug('Authentication not Required');\n      this.emit('AuthenticationSuccess');\n      return Status.AUTH_NOT_REQUIRED;\n    }\n\n    try {\n      await this.send('Authenticate', {\n        auth: hash(auth.salt, auth.challenge, password)\n      });\n    } catch (e) {\n      debug('Authentication Failure %o', e);\n      this.emit('AuthenticationFailure');\n      throw e;\n    }\n\n    debug('Authentication Success');\n    this.emit('AuthenticationSuccess');\n  }\n\n  /**\n   * Close and disconnect the WebSocket connection.\n   * FIXME: this should support a callback and return a Promise to match the connect method.\n   *\n   * @function\n   * @category request\n   */\n  disconnect() {\n    debug('Disconnect requested.');\n    if (this._socket) {\n      this._socket.close();\n    }\n  }\n}\n\nmodule.exports = Socket;\n","const Socket = require('./Socket');\nconst Status = require('./Status');\nconst debug = require('debug')('obs-websocket-js:Core');\n\nlet requestCounter = 0;\n\nfunction generateMessageId() {\n  return String(requestCounter++);\n}\n\nclass OBSWebSocket extends Socket {\n  /**\n   * Generic Socket request method. Returns a promise.\n   * Generates a messageId internally and will override any passed in the args.\n   * Note that the requestType here is pre-marshaling and currently must match exactly what the websocket plugin is expecting.\n   *\n   * @param  {String}   requestType obs-websocket plugin expected request type.\n   * @param  {Object}   [args={}]   request arguments.\n   * @return {Promise}              Promise, passes the plugin response object.\n   */\n  send(requestType, args = {}) {\n    args = args || {};\n\n    return new Promise((resolve, reject) => {\n      const messageId = generateMessageId();\n      let rejectReason;\n\n      if (!requestType) {\n        rejectReason = Status.REQUEST_TYPE_NOT_SPECIFIED;\n      }\n\n      if (!this._connected) {\n        rejectReason = Status.NOT_CONNECTED;\n      }\n\n      // Assign a temporary event listener for this particular messageId to uniquely identify the response.\n      this.once(`obs:internal:message:id-${messageId}`, (err, data) => {\n        if (err) {\n          debug('[send:reject] %o', err);\n          reject(err);\n        } else {\n          debug('[send:resolve] %o', data);\n          resolve(data);\n        }\n      });\n\n      // If we don't have a reason to fail fast, send the request to the socket.\n      if (!rejectReason) {\n        args['request-type'] = requestType;\n        args['message-id'] = messageId;\n\n        // Submit the request to the websocket.\n        debug('[send] %s %s %o', messageId, requestType, args);\n        try {\n          this._socket.send(JSON.stringify(args));\n        } catch (e) {\n          // TODO: Consider inspecting the exception thrown to gleam some relevant info and pass that on.\n          rejectReason = Status.SOCKET_EXCEPTION;\n        }\n      }\n\n      // If the socket call was unsuccessful or bypassed, simulate its resolution.\n      if (rejectReason) {\n        this.emit(`obs:internal:message:id-${messageId}`, rejectReason);\n      }\n    });\n  }\n\n  /**\n   * Generic Socket request method. Handles callbacks.\n   * Internally calls `send` (which is promise-based). See `send`'s docs for more details.\n   *\n   * @param  {String}   requestType obs-websocket plugin expected request type.\n   * @param  {Object}   [args={}]   request arguments.\n   * @param  {Function} callback    Optional. callback(err, data)\n   */\n  sendCallback(requestType, args = {}, callback) {\n    // Allow the `args` argument to be omitted.\n    if (callback === undefined && typeof args === 'function') {\n      callback = args;\n      args = {};\n    }\n\n    // Perform the actual request, using `send`.\n    this.send(requestType, args).then((...response) => {\n      callback(null, ...response);\n    }).catch(error => {\n      callback(error);\n    });\n  }\n}\n\nmodule.exports = OBSWebSocket;\n","module.exports = require('./OBSWebSocket.js');\n","const OBSWebSocket = require('obs-websocket-js');\nconst obs = new OBSWebSocket();\nobs.connect();\n\n/* global $CC, Utils, $SD */\n\n/**\n * Here are a couple of wrappers we created to help ypu quickly setup\n * your plugin and subscribe to events sent by Stream Deck to your plugin.\n */\n\n /**\n  * The 'connected' event is sent to your plugin, after the plugin's instance\n  * is registered with Stream Deck software. It carries the current websocket\n  * and other information about the current environmet in a JSON object\n  * You can use it to subscribe to events you want to use in your plugin.\n  */\n\n$SD.on('connected', (jsonObj) => connected(jsonObj));\n\nfunction connected(jsn) {\n    /** subscribe to the willAppear and other events */\n    $SD.on('com.elgato.template.action.willAppear', (jsonObj) => action.onWillAppear(jsonObj));\n    $SD.on('com.elgato.template.action.keyUp', (jsonObj) => action.onKeyUp(jsonObj));\n    $SD.on('com.elgato.template.action.sendToPlugin', (jsonObj) => action.onSendToPlugin(jsonObj));\n    $SD.on('com.elgato.template.action.didReceiveSettings', (jsonObj) => action.onDidReceiveSettings(jsonObj));\n    $SD.on('com.elgato.template.action.propertyInspectorDidAppear', (jsonObj) => {\n        console.log('%c%s', 'color: white; background: black; font-size: 13px;', '[app.js]propertyInspectorDidAppear:');\n    });\n    $SD.on('com.elgato.template.action.propertyInspectorDidDisappear', (jsonObj) => {\n        console.log('%c%s', 'color: white; background: red; font-size: 13px;', '[app.js]propertyInspectorDidDisappear:');\n    });\n};\n\n/** ACTIONS */\n\nconst action = {\n    settings:{},\n    onDidReceiveSettings: function(jsn) {\n        console.log('%c%s', 'color: white; background: red; font-size: 15px;', '[app.js]onDidReceiveSettings:');\n\n        this.settings = Utils.getProp(jsn, 'payload.settings', {});\n        this.doSomeThing(this.settings, 'onDidReceiveSettings', 'orange');\n\n        /**\n         * In this example we put a HTML-input element with id='mynameinput'\n         * into the Property Inspector's DOM. If you enter some data into that\n         * input-field it get's saved to Stream Deck persistently and the plugin\n         * will receice the updated 'didReceiveSettings' event.\n         * Here we look for this setting and use it to change the title of\n         * the key.\n         */\n\n         this.setTitle(jsn);\n    },\n\n    /**\n     * The 'willAppear' event is the first event a key will receive, right before it gets\n     * showed on your Stream Deck and/or in Stream Deck software.\n     * This event is a good place to setup your plugin and look at current settings (if any),\n     * which are embedded in the events payload.\n     */\n\n    onWillAppear: function (jsn) {\n        console.log(\"You can cache your settings in 'onWillAppear'\", jsn.payload.settings);\n        /**\n         * \"The willAppear event carries your saved settings (if any). You can use these settings\n         * to setup your plugin or save the settings for later use.\n         * If you want to request settings at a later time, you can do so using the\n         * 'getSettings' event, which will tell Stream Deck to send your data\n         * (in the 'didReceiceSettings above)\n         *\n         * $SD.api.getSettings(jsn.context);\n        */\n        this.settings = jsn.payload.settings;\n\n        // nothing in the settings pre-fill something just for demonstration purposes\n        if (!this.settings || Object.keys(this.settings).length === 0) {\n            this.settings.mynameinput = 'TEMPLATE';\n        }\n        this.setTitle(jsn);\n    },\n\n    onKeyUp: async function (jsn) {\n        this.doSomeThing(jsn, 'onKeyUp', 'green');\n        console.log('onKeyUp', await obs.getSourcesList(), obs.getSourcesList())\n    },\n\n    onSendToPlugin: function (jsn) {\n        /**\n         * this is a message sent directly from the Property Inspector\n         * (e.g. some value, which is not saved to settings)\n         * You can send this event from Property Inspector (see there for an example)\n         */\n\n        const sdpi_collection = Utils.getProp(jsn, 'payload.sdpi_collection', {});\n        if (sdpi_collection.value && sdpi_collection.value !== undefined) {\n            this.doSomeThing({ [sdpi_collection.key] : sdpi_collection.value }, 'onSendToPlugin', 'fuchsia');\n        }\n    },\n\n    /**\n     * This snippet shows, how you could save settings persistantly to Stream Deck software\n     * It is not used in this example plugin.\n     */\n\n    saveSettings: function (jsn, sdpi_collection) {\n        console.log('saveSettings:', jsn);\n        if (sdpi_collection.hasOwnProperty('key') && sdpi_collection.key != '') {\n            if (sdpi_collection.value && sdpi_collection.value !== undefined) {\n                this.settings[sdpi_collection.key] = sdpi_collection.value;\n                console.log('setSettings....', this.settings);\n                $SD.api.setSettings(jsn.context, this.settings);\n            }\n        }\n    },\n\n    /**\n     * Here's a quick demo-wrapper to show how you could change a key's title based on what you\n     * stored in settings.\n     * If you enter something into Property Inspector's name field (in this demo),\n     * it will get the title of your key.\n     *\n     * @param {JSON} jsn // the JSON object passed from Stream Deck to the plugin, which contains the plugin's context\n     *\n     */\n\n    setTitle: function(jsn) {\n        if (this.settings && this.settings.hasOwnProperty('mynameinput')) {\n            console.log(\"watch the key on your StreamDeck - it got a new title...\", this.settings.mynameinput);\n            $SD.api.setTitle(jsn.context, this.settings.mynameinput);\n        }\n    },\n\n    /**\n     * Finally here's a methood which gets called from various events above.\n     * This is just an idea how you can act on receiving some interesting message\n     * from Stream Deck.\n     */\n\n    doSomeThing: function(inJsonData, caller, tagColor) {\n        console.log('%c%s', `color: white; background: ${tagColor || 'grey'}; font-size: 15px;`, `[app.js]doSomeThing from: ${caller}`);\n        // console.log(inJsonData);\n\n\n    },\n\n\n};\n"]}